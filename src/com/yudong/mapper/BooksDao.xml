<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yudong.dao.BooksDao">
  <resultMap id="BaseResultMap" type="com.yudong.entity.Books">
    <id column="iBookId" jdbcType="INTEGER" property="bookId" />
    <result column="vBookName" jdbcType="VARCHAR" property="bookName" />
    <result column="iBookClassificationId" jdbcType="INTEGER" property="bookClassificationId" />
    <result column="vBookIntroduction" jdbcType="VARCHAR" property="bookIntroduction" />
    <result column="vBookAuthor" jdbcType="VARCHAR" property="bookAuthor" />
    <result column="fBookSize" jdbcType="REAL" property="bookSize" />
    <result column="dBookPrice" jdbcType="DOUBLE" property="bookPrice" />
    <result column="vBookCoverPath" jdbcType="VARCHAR" property="bookCoverPath" />
    <result column="vBookLocation" jdbcType="VARCHAR" property="bookLocation" />
    <result column="vUploadPerson" jdbcType="VARCHAR" property="uploadPerson" />
    <result column="dUploadTime" jdbcType="TIMESTAMP" property="uploadTime" />
    <result column="iBookState" jdbcType="INTEGER" property="bookState" />
    <result column="iBookDownloads" jdbcType="INTEGER" property="bookDownloads" />
  </resultMap>
  
  <sql id="Base_Column_List">
    iBookId, vBookName, iBookClassificationId, vBookIntroduction, vBookAuthor, fBookSize, 
    dBookPrice, vBookCoverPath, vBookLocation, vUploadPerson, dUploadTime, iBookState, 
    iBookDownloads
  </sql>
  
  <select id="getBooks" resultMap="BaseResultMap">
  	select * from books order by iBookDownloads desc limit 7
  </select>
  
  <select id="getClassificationBooks" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select * from books where iBookClassificationId = #{classificationId,jdbcType=INTEGER}
  </select>
  
  <select id="getBookById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select * from books where iBookId = #{bookId,jdbcType=INTEGER}
  </select>
  
  <select id="getBookByName" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select * from books where vBookName = #{bookName,jdbcType=VARCHAR}
  </select>
  
  <select id="getBookBySearchName" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select * from books where vBookName like "%"#{searchBookName,jdbcType=VARCHAR}"%"
  </select>
  
  <select id="getAllBooks" resultMap="BaseResultMap">
  	select * from books
  </select>
  
  <select id="getBooksByAuthor" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select * from books where vBookAuthor = #{author,jdbcType=VARCHAR}
  </select>
  
    <select id="getBooksByUploadPerson" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select * from books where vUploadPerson = #{uploadPerson,jdbcType=VARCHAR}
  </select>

  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from books
    where iBookId = #{bookId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.yudong.entity.Books">
    insert into books ( vBookName, iBookClassificationId, 
      vBookIntroduction, vBookAuthor, fBookSize, 
      dBookPrice, vBookCoverPath, vBookLocation, 
      vUploadPerson, dUploadTime, iBookState, 
      iBookDownloads)
    values (#{bookName,jdbcType=VARCHAR}, #{bookClassificationId,jdbcType=INTEGER}, 
      #{bookIntroduction,jdbcType=VARCHAR}, #{bookAuthor,jdbcType=VARCHAR}, #{bookSize,jdbcType=REAL}, 
      #{bookPrice,jdbcType=DOUBLE}, #{bookCoverPath,jdbcType=VARCHAR}, #{bookLocation,jdbcType=VARCHAR}, 
      #{uploadPerson,jdbcType=VARCHAR}, #{uploadTime,jdbcType=TIMESTAMP}, #{bookState,jdbcType=INTEGER}, 
      #{bookDownloads,jdbcType=INTEGER})
  </insert>
  
  <insert id="insertSelective" parameterType="com.yudong.entity.Books">
    insert into books
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        iBookId,
      </if>
      <if test="bookName != null">
        vBookName,
      </if>
      <if test="bookClassificationId != null">
        iBookClassificationId,
      </if>
      <if test="bookIntroduction != null">
        vBookIntroduction,
      </if>
      <if test="bookAuthor != null">
        vBookAuthor,
      </if>
      <if test="bookSize != null">
        fBookSize,
      </if>
      <if test="bookPrice != null">
        dBookPrice,
      </if>
      <if test="bookCoverPath != null">
        vBookCoverPath,
      </if>
      <if test="bookLocation != null">
        vBookLocation,
      </if>
      <if test="uploadPerson != null">
        vUploadPerson,
      </if>
      <if test="uploadTime != null">
        dUploadTime,
      </if>
      <if test="bookState != null">
        iBookState,
      </if>
      <if test="bookDownloads != null">
        iBookDownloads,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookClassificationId != null">
        #{bookClassificationId,jdbcType=INTEGER},
      </if>
      <if test="bookIntroduction != null">
        #{bookIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null">
        #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookSize != null">
        #{bookSize,jdbcType=REAL},
      </if>
      <if test="bookPrice != null">
        #{bookPrice,jdbcType=DOUBLE},
      </if>
      <if test="bookCoverPath != null">
        #{bookCoverPath,jdbcType=VARCHAR},
      </if>
      <if test="bookLocation != null">
        #{bookLocation,jdbcType=VARCHAR},
      </if>
      <if test="uploadPerson != null">
        #{uploadPerson,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookState != null">
        #{bookState,jdbcType=INTEGER},
      </if>
      <if test="bookDownloads != null">
        #{bookDownloads,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.yudong.entity.Books">
    update books
    <set>
      <if test="bookName != null">
        vBookName = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookClassificationId != null">
        iBookClassificationId = #{bookClassificationId,jdbcType=INTEGER},
      </if>
      <if test="bookIntroduction != null">
        vBookIntroduction = #{bookIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="bookAuthor != null">
        vBookAuthor = #{bookAuthor,jdbcType=VARCHAR},
      </if>
      <if test="bookSize != null">
        fBookSize = #{bookSize,jdbcType=REAL},
      </if>
      <if test="bookPrice != null">
        dBookPrice = #{bookPrice,jdbcType=DOUBLE},
      </if>
      <if test="bookCoverPath != null">
        vBookCoverPath = #{bookCoverPath,jdbcType=VARCHAR},
      </if>
      <if test="bookLocation != null">
        vBookLocation = #{bookLocation,jdbcType=VARCHAR},
      </if>
      <if test="uploadPerson != null">
        vUploadPerson = #{uploadPerson,jdbcType=VARCHAR},
      </if>
      <if test="uploadTime != null">
        dUploadTime = #{uploadTime,jdbcType=TIMESTAMP},
      </if>
      <if test="bookState != null">
        iBookState = #{bookState,jdbcType=INTEGER},
      </if>
      <if test="bookDownloads != null">
        iBookDownloads = #{bookDownloads,jdbcType=INTEGER},
      </if>
    </set>
    where iBookId = #{bookId,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.yudong.entity.Books">
    update books
    set vBookName = #{bookName,jdbcType=VARCHAR},
      iBookClassificationId = #{bookClassificationId,jdbcType=INTEGER},
      vBookIntroduction = #{bookIntroduction,jdbcType=VARCHAR},
      vBookAuthor = #{bookAuthor,jdbcType=VARCHAR},
      fBookSize = #{bookSize,jdbcType=REAL},
      dBookPrice = #{bookPrice,jdbcType=DOUBLE},
      vBookCoverPath = #{bookCoverPath,jdbcType=VARCHAR},
      vBookLocation = #{bookLocation,jdbcType=VARCHAR},
      vUploadPerson = #{uploadPerson,jdbcType=VARCHAR},
      dUploadTime = #{uploadTime,jdbcType=TIMESTAMP},
      iBookState = #{bookState,jdbcType=INTEGER},
      iBookDownloads = #{bookDownloads,jdbcType=INTEGER}
    where iBookId = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>